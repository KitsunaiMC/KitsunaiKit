plugins {
    id 'java'
    id 'maven-publish'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'cc.kitsunai'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
}

tasks.register('apiJar', Jar) {
    archiveClassifier = 'api'

    from(sourceSets.main.output) {
        include 'cc/kitsunai/kit/api/**'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact apiJar
            artifactId = 'KitsunaiKit-api'
        }
    }

    repositories {
        maven { url = layout.buildDirectory.dir("../repo") }
    }
}

dependencies {
    compileOnly 'com.github.KitsunaiMC:PlayerInfo:1.0:api'
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
    implementation 'com.zaxxer:HikariCP:5.1.0'
}

build {
    dependsOn shadowJar
}

shadowJar {
    archiveFileName = "KitsunaiKit-${version}-all.jar"
}

tasks {
  runServer {
    // Configure the Minecraft version for our task.
    // This is the only required configuration besides applying the plugin.
    // Your plugin's jar (or shadowJar if present) will be used automatically.
    minecraftVersion("1.21")
  }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
